syntax = "proto3";

package Protocol;
import "google/protobuf/timestamp.proto";
option csharp_namespace = "Google.Protobuf.Protocol";

// C_ client to server
// S_ server to client

// add-migration ㅇㅇㅇ
// update-database

enum MsgId {
	S_ENTER_GAME = 0;
	S_LEAVE_GAME = 1;
	S_SPAWN = 2;
	S_DESPAWN = 3;
	C_MOVE = 4;
	S_MOVE = 5;
	C_SKILL = 6;
	S_SKILL = 7;
	S_CHANGE_HP = 8;
	S_DIE = 9;
	S_CONNECTED = 10;
	C_LOGIN = 11;
	S_LOGIN = 12;
	C_ENTER_GAME = 15;
	C_CREATE_PLAYER = 13;
	S_CREATE_PLAYER = 14;
	S_ITEM_LIST = 16;
	S_ADD_ITEM = 17;
	C_EQUIP_ITEM = 18;
	S_EQUIP_ITEM = 19;
	S_CHANGE_STAT = 20;
	C_USE_ITEM = 21;
	S_USE_ITEM = 22;
	S_PING = 23;
	C_PONG = 24;
	S_MOVE_MAP = 25;
	S_ADD_EXP = 26;
	C_VENDOR_INTERACTION = 27;
	S_VENDOR_INTERACTION = 28;
	C_SELL_ITEM = 29;
	S_SELL_ITEM = 30;
	C_BUY_ITEM = 31;
	C_LOGIN_ACCOUNT = 32;
	S_LOGIN_ACCOUNT = 33;
	C_CREATE_ACCOUNT = 34;
	S_CREATE_ACCOUNT = 35;
	S_CHANGE_MP = 36;
	C_ENCHANT_ITEM = 37;
	S_ENCHANT_ITEM = 38;
	C_CHAT = 39;
	S_CHAT = 40;
	C_ITEM_SLOT_CHANGE = 41;
	S_ITEM_SLOT_CHANGE = 42;
}

enum CreatureState{
	IDLE = 0;
	MOVING = 1;
	SKILL = 2;
	DEAD = 3;
}

enum MoveDir{
	UP = 0;
	DOWN = 1;
	LEFT = 2;
	RIGHT = 3;
}

enum GameObjectType{
	NONE = 0;
	PLAYER = 1;
	MONSTER = 2;
	PROJECTILE = 3;
	NPC = 4;
}

enum SkillType
{
	SKILL_NONE = 0;
	SKILL_AUTO = 1;
	SKILL_PROJECTILE = 2;
}

enum PlayerServerState
{
	SERVER_STATE_LOGIN = 0;
	SERVER_STATE_LOBBY = 1;
	SERVER_STATE_GAME = 2;
}

enum ItemType
{
	ITEM_TYPE_NONE = 0;
	ITEM_TYPE_WEAPON = 1;
	ITEM_TYPE_ARMOR = 2;
	ITEM_TYPE_CONSUMABLE = 3;
}

enum WeaponType
{
	WEAPON_TYPE_NONE = 0;
	WEAPON_TYPE_MELEE = 1;
	WEAPON_TYPE_RANGE = 2;
}

enum ArmorType
{
	ARMOR_TYPE_NONE = 0;
	ARMOR_TYPE_HELMET = 1;
	ARMOR_TYPE_ARMOR = 2;
	ARMOR_TYPE_BOOTS = 3;
	ARMOR_TYPE_PANTS = 4;
}

enum ConsumableType
{
	CONSUMABLE_TYPE_NONE = 0;
	CONSUMABLE_TYPE_HP_PORTION = 1;
	CONSUMABLE_TYPE_MP_PORTION = 2;
}

message S_EnterGame {
	ObjectInfo player = 1;
}

message ObjectInfo{
	int32 objectId = 1;
	string name = 2;
	PositionInfo posInfo = 3;
	StatInfo statInfo = 4;
}

message S_LeaveGame {
	
}

message S_Spawn {
	repeated ObjectInfo objects = 1;
}

message S_Despawn {
	repeated int32 objectIds = 1;
}

message C_Move {
	PositionInfo posInfo = 1;
}

message S_Move {
	int32 objectId = 1;
	PositionInfo posInfo = 2;
}

message PositionInfo{
	CreatureState state = 1;
	MoveDir moveDir = 2;
	int32 posX = 3;
	int32 posY = 4;
}

message StatInfo
{
	int32 level = 1;
	int32 maxHp = 2;
	int32 maxMp = 3;
	int32 hp = 4;
	int32 mp = 5;
	float speed = 6;
	int32 attack = 7;
	int32 defence = 8;
	int32 totalExp = 9;
	int32 currentExp = 10;
	int32 gold = 11;
}

message C_Skill {
	SkillInfo info = 1;
}

message S_Skill {
	int32 objectId = 1;
	SkillInfo info = 2;
}

message SkillInfo{
	int32 skillId = 1;
}

message S_ChangeHp
{
	int32 objectId = 1;
	int32 hp = 2;
}

message S_Die
{
	int32 objectId = 1;
	int32 attackerId = 2;
}

message S_Connected
{
	int32 playerId = 1;
}

message C_Login
{
	string uniqueId = 1;
}

message S_Login
{
	int32 loginOk = 1;
	repeated LobbyPlayerInfo players = 2;
}

message LobbyPlayerInfo
{
	int32 playerDbId = 1;
	string name = 2;
	StatInfo statInfo = 3;
}

message C_CreatePlayer
{
	string name = 1;
}

message S_CreatePlayer
{
	LobbyPlayerInfo player = 1;
}

message C_EnterGame
{
	string name = 1;
	int32 roomNumber = 2;
}

message S_ItemList
{
	repeated ItemInfo items = 1;
}

message ItemInfo
{
	int32 itemDbId = 1;
	int32 templateId = 2;
	int32 count = 3;
	int32 slot = 4;
	int32 price = 5;
	int32 grade = 6;
	int32 enchant = 7;
	bool equipped = 8;
}

message S_AddItem
{
	repeated ItemInfo items = 1;
}

message C_EquipItem
{
	int32 itemDbId = 1;
	bool equipped = 2;
}

message S_EquipItem
{
	int32 itemDbId = 1;
	bool equipped = 2;
}

message S_ChangeStat
{
	StatInfo statInfo = 1;
}

message C_UseItem
{
	int32 itemDbId = 1;
}

message S_UseItem
{
	int32 itemDbId = 1;
}

message S_Ping
{
}

message C_Pong
{
}

message S_MoveMap
{
	int32 mapNumber = 1;
}

message S_AddExp
{
	int32 exp = 1;
}

enum VendorType{
	NORMAL = 0;
	POTION = 1;
	BLACKSMITH = 2;
	GROCER = 3;
}

message C_VendorInteraction
{
}

message VendorItemInfo
{
	int32 itemId = 1;
	int32 slot = 2;
	int32 price = 3;
}

message S_VendorInteraction
{
	VendorType vendorType = 1;
	repeated VendorItemInfo items = 2;
}

message C_SellItem
{
	int32 itemDbId = 1;
}

message S_SellItem
{
	int32 itemDbId = 1;
}

message C_BuyItem	//클라이언트로 보낼때는 S_ADD_ITEM으로 보내기
{
	int32 itemId = 1;
}

message C_LoginAccount
{
	string accountId = 1;
	string password = 2;
}

message ServerInfo
{
	string name = 2;
	string ip = 3;
	int32 port = 4;
	int32 busyScore = 5;
}

message S_LoginAccount
{
	bool loginOk = 1;
	repeated ServerInfo serverList = 2;
}

message C_CreateAccount
{
	string accountId = 1;
	string password = 2;
}

message S_CreateAccount
{
	bool createOk = 1;
}

message S_ChangeMp
{
	int32 objectId = 1;
	int32 mp = 2;
}

message C_EnchantItem
{
	int32 itemDbId = 1;
}

message S_EnchantItem
{
	int32 itemDbId = 1;
	int32 enchant = 2;
}

message C_Chat
{
	string chat = 1;
}

message S_Chat
{
	string name = 1;
	string chat = 2;
}

message C_ItemSlotChange
{
	int32 item1DbId = 1;
	int32 slot1 = 2;
	int32 item2DbId = 3;
	int32 slot2 = 4;
}

message S_ItemSlotChange
{
	int32 item1DbId = 1;
	int32 slot1 = 2;
	int32 item2DbId = 3;
	int32 slot2 = 4;	
}
